{"version":3,"sources":["ApiService.js","Spinner/index.js","Spinner/spinner.js","App.js","index.js"],"names":["ApiService","state","planets","_transformPerson","person","id","_extractId","name","gender","birthYear","birth_year","liked","homeworld","getAllPlanets","count","a","getResource","res","results","map","_transformPlanet","planet","url","fetch","ok","Error","status","json","body","this","_getNumber","number","num","item","match","Spinner","className","App","swapiService","peopleListPage","currentPage","peoplesPerPage","likedCharacters","visible","term","allPeopleCount","allPlanetsCount","charFilter","b","event","newTerm","target","value","setState","getPeoplesNumber","then","i","Math","ceil","getAllPeople","peopleList","prev","sort","getPlanetsNumber","result","catch","alert","indexOfLastPeople","indexOfFirstPeople","currentPeoples","slice","characterList","arr","like","cannotLike","el","alt","src","onClick","newLiked","push","makeLiked","err","characters","allCharacters","onSearch","length","filter","props","children","toLowerCase","indexOf","style","color","fontSize","find","console","log","likedCharacterList","items","includes","itemFilter","buttonTitle","visibleContent","showedCharacters","footer","disabled","maleGenderButtonStyle","femaleGenderButtonStyle","anotherGenderButtonStyle","showedGenderButtons","visibleFooter","buttonStyle","type","placeholder","onChange","search","bind","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3ad85e0b.chunk.js","sourcesContent":["export default class ApiService {\n  state = {\n    planets: [],\n  };\n\n  async getResource(url) {\n    const res = await fetch(`https://swapi.dev/api${url}`);\n    if (!res.ok) {\n      throw new Error(`Could not fetch ${url} received ${res.status}`);\n    }\n    const body = await res.json();\n    return body;\n  }\n\n  async getPeoplesNumber() {\n    const res = await this.getResource(`/people/`);\n    return this._getNumber(res);\n  }\n\n  async getPlanetsNumber() {\n    const res = await this.getResource(`/planets/`);\n    return this._getNumber(res);\n  }\n\n  _getNumber(number) {\n    return {\n      num: number.count,\n    };\n  }\n\n  async getAllPeople(count) {\n    const res = await this.getResource(`/people/?page=${count}`);\n    return res.results.map(this._transformPerson);\n  }\n\n  _extractId(item) {\n    const regExp = /\\/([0-9]*)\\/$/;\n    return item.url.match(regExp)[1];\n  }\n  _transformPerson = (person) => {\n    return {\n      id: this._extractId(person),\n      name: person.name,\n      gender: person.gender,\n      birthYear: person.birth_year,\n      liked: false,\n      homeworld: person.homeworld,\n    };\n  };\n\n  getAllPlanets = async (count) => {\n    const res = await this.getResource(`/planets/?page=${count}`);\n    return res.results.map(this._transformPlanet);\n  };\n\n  _transformPlanet = (planet) => {\n    return {\n      name: planet.name,\n      url: planet.url,\n    };\n  };\n}\n","import Spinner from \"./spinner\";\n\nexport default Spinner;\n","import React from \"react\";\n\nimport \"./spinner.css\";\n\nconst Spinner = () => {\n  return (\n    <div className=\"lds-css\">\n      <div className=\"lds-double-ring\">\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React, { Component } from \"react\";\nimport ApiService from \"./ApiService\";\nimport Spinner from \"./Spinner\";\nimport \"./App.css\";\n\nexport default class App extends Component {\n  swapiService = new ApiService();\n\n  state = {\n    peopleListPage: [],\n    currentPage: 1, // Текущая отображаемая страница\n    peoplesPerPage: 12,\n    likedCharacters: [],\n    visible: true, // Отображение блоков основной/понравившиеся\n    term: \"\", // Необходимое для поиска поле\n    gender: \"all\",\n    planets: [],\n    allPeopleCount: null,\n    allPlanetsCount: null,\n  };\n\n  search(event) {\n    const newTerm = event.target.value;\n    this.setState({\n      term: newTerm,\n    });\n  }\n\n  charFilter = (a, b) => {\n    return a.id - b.id;\n  };\n\n  componentDidMount() {\n    this.swapiService\n      .getPeoplesNumber()\n      .then((res) => {\n        this.setState({ allPeopleCount: res.num });\n      })\n      .then(() => {\n        for (let i = 1; i <= Math.ceil(this.state.allPeopleCount / 10) ; i++) {\n          this.swapiService.getAllPeople(i).then((peopleList) => {\n            this.setState((prev) => ({\n              peopleListPage: [...prev.peopleListPage, ...peopleList].sort(\n                this.charFilter\n              ),\n            }));\n          });\n        }\n      });\n    this.swapiService\n      .getPlanetsNumber()\n      .then((res) => {\n        this.setState({ allPlanetsCount: res.num });\n      })\n      .then(() => {\n        for (let i = 1; i <= Math.ceil(this.state.allPlanetsCount / 10); i++) {\n          this.swapiService.getAllPlanets(i).then((result) => {\n            this.setState((prev) => ({\n              planets: [...prev.planets, ...result],\n            }));\n          });\n        }\n      })\n      .catch(() => {\n        alert(\n          \"Ошибка получения данных с сервера! Пожалуйста, перезагрузите страницу!\"\n        );\n      });\n  }\n\n  render() {\n    const {\n      peopleListPage,\n      peoplesPerPage,\n      currentPage,\n      likedCharacters,\n      visible,\n      term,\n      gender,\n    } = this.state;\n\n    if (!peopleListPage) {\n      return null;\n    }\n\n    const indexOfLastPeople = currentPage * peoplesPerPage;\n    const indexOfFirstPeople = indexOfLastPeople - peoplesPerPage;\n    const currentPeoples = peopleListPage.slice(\n      indexOfFirstPeople,\n      indexOfLastPeople\n    );\n\n    const characterList = (arr) => {\n      const { likedCharacters } = this.state;\n\n      const makeLiked = (el) => {\n        if (!el.liked) {\n          const newLiked = likedCharacters;\n          newLiked.push(el);\n          this.setState({\n            likedCharacters: newLiked,\n          });\n          el.liked = !el.liked;\n        } else {\n          alert('Персонаж уже был добавлен в раздел \"Любимые\"!');\n        }\n      };\n\n      const like = <span>&#129505;</span>;\n      const cannotLike = <span>&#128153;</span>;\n\n      try {\n        return arr.map((el) => {\n          return (\n            <div key={el.id} className=\"char\">\n              <img\n                className=\"charImg\"\n                alt={el.name}\n                src={`https://starwars-visualguide.com/assets/img/characters/${el.id}.jpg`}\n              ></img>\n              <br></br>\n              <h1>{el.name}</h1>\n              <button\n                id=\"likeButton\"\n                className=\"likeButton\"\n                onClick={() => makeLiked(el)}\n              >\n                {el.liked ? like : cannotLike}\n              </button>\n            </div>\n          );\n        });\n      } catch (err) {}\n    };\n\n    const likedCharacterList = (arr) => {\n      try {\n        return arr.map((el) => {\n          return (\n            <div key={el.id} className=\"charLiked\">\n              <img\n                className=\"charImg\"\n                alt={el.name}\n                src={`https://starwars-visualguide.com/assets/img/characters/${el.id}.jpg`}\n              ></img>\n              <br></br>\n              <h1 style={{ color: \"rgb(155, 14, 14)\" }}>{el.name}</h1>\n              <h1>Gender: {el.gender}</h1>\n              <h1>Birth year: {el.birthYear}</h1>\n              <h1 style={{ fontSize: \"22px\" }}>\n                Homeworld:{\" \"}\n                {\n                  this.state.planets.find((item) => item.url === el.homeworld)\n                    .name\n                }\n              </h1>\n            </div>\n          );\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    const incrementCount = () => {\n      currentPage ===\n      Math.ceil(this.state.allPeopleCount / this.state.peoplesPerPage)\n        ? alert(\"Упс! Кажется, туда нельзя!\")\n        : this.setState({ currentPage: currentPage + 1 });\n      return currentPage;\n    };\n\n    const decrementCount = () => {\n      currentPage === 1\n        ? alert(\"Упс! Кажется, туда нельзя!\")\n        : this.setState({ currentPage: currentPage - 1 });\n      return currentPage;\n    };\n\n    const characters = characterList(currentPeoples);\n    const allCharacters = characterList(peopleListPage);\n\n    // Поиск по имени\n\n    const onSearch = (allCharacters, term, currentPeoples) => {\n      if (term.length === 0 || term === \" \") {\n        return currentPeoples;\n      }\n      return allCharacters.filter((el) => {\n        return (\n          el.props.children[2].props.children\n            .toLowerCase()\n            .indexOf(term.toLowerCase()) > -1\n        );\n      });\n    };\n\n    // Фильтр по полу в разделе \"Любимые персонажи\"\n\n    const itemFilter = (items, gender) => {\n      if ([\"male\", \"female\", \"n/a\", \"none\"].includes(gender)) {\n        return items.filter((item) => item.gender === gender);\n      }\n      return items;\n    };\n\n    const liked =\n      likedCharacters.length !== 0\n        ? likedCharacterList(itemFilter(likedCharacters, gender))\n        : likedCharacters;\n\n    const buttonTitle = visible ? \"Любимые персонажи\" : \"Главная страница\";\n\n    const content = visible ? characters : liked;\n    const visibleContent = visible\n      ? onSearch(allCharacters, term, content)\n      : onSearch(liked, term, liked);\n    const showedCharacters =\n      visibleContent.length !== 0 ? (\n        visibleContent\n      ) : (\n        <h1 className=\"title\">\n          {\" \"}\n          Кажется, на этой странице пусто!<br></br> Проверьте правильность\n          написания имени или попробуйте поискать на другой странице!\n        </h1>\n      );\n\n    const footer = (\n      <div className=\"footer\">\n        <button className=\"lovedButton\" onClick={() => decrementCount()}>\n          Предыдущая страница\n        </button>\n        <button disabled={true} className=\"lovedButton\">\n          {currentPage}\n        </button>\n        <button className=\"lovedButton\" onClick={() => incrementCount()}>\n          Следующая страница\n        </button>\n      </div>\n    );\n\n    const maleGenderButtonStyle =\n      gender === \"male\" ? \"lovedButtonChosen\" : \"lovedButtonReset\";\n    const femaleGenderButtonStyle =\n      gender === \"female\" ? \"lovedButtonChosen\" : \"lovedButtonReset\";\n    const anotherGenderButtonStyle =\n      gender === \"n/a\" ? \"lovedButtonChosen\" : \"lovedButtonReset\";\n\n    const genderButtons = (\n      <div>\n        <button\n          className={maleGenderButtonStyle}\n          onClick={() => this.setState({ gender: \"male\" })}\n        >\n          Мужчины\n        </button>\n        <button\n          className={femaleGenderButtonStyle}\n          onClick={() => this.setState({ gender: \"female\" })}\n        >\n          Женщины\n        </button>\n        <button\n          className={anotherGenderButtonStyle}\n          onClick={() => this.setState({ gender: \"n/a\" })}\n        >\n          Иное\n        </button>\n        <button\n          className=\"lovedButtonReset\"\n          onClick={() => this.setState({ gender: \"all\" })}\n        >\n          Сбросить\n        </button>\n      </div>\n    );\n\n    const showedGenderButtons = visible ? null : genderButtons;\n\n    const visibleFooter =\n      visible && (term === \"\" || term === \" \") ? footer : null;\n\n    const buttonStyle = visible ? \"lovedCharButton\" : \"generalPageButton\";\n\n    if (visibleContent.length === 0 && term === \"\" && visible) {\n      return <Spinner />;\n    }\n\n    return (\n      <div className=\"general\">\n        <div className=\"header\">\n          <button\n            className={buttonStyle}\n            onClick={() => this.setState({ visible: !visible, gender: \"all\" })}\n          >\n            {buttonTitle}\n          </button>\n          <input\n            className=\"searchPanel\"\n            type=\"text\"\n            placeholder=\"Search\"\n            onChange={this.search.bind(this)}\n          ></input>\n        </div>\n        <div className=\"charBlock\">\n          {showedGenderButtons}\n          {showedCharacters}\n        </div>\n        {visibleFooter}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}